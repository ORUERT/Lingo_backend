<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.lingo.mapper.TWordMapper">
  <resultMap id="BaseResultMap" type="com.example.lingo.model.TWord">
    <id column="word_id" jdbcType="BIGINT" property="wordId" />
    <result column="table_id" jdbcType="BIGINT" property="tableId" />
    <result column="word" jdbcType="VARCHAR" property="word" />
    <result column="definition" jdbcType="VARCHAR" property="definition" />
    <result column="phonetic" jdbcType="VARCHAR" property="phonetic" />
    <result column="phrase" jdbcType="VARCHAR" property="phrase" />
    <result column="definition_image" jdbcType="VARCHAR" property="definitionImage" />
    <result column="phrase_image" jdbcType="VARCHAR" property="phraseImage" />
    <result column="phrase_explain" jdbcType="VARCHAR" property="phraseExplain" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_word
    where word_id = #{wordId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.example.lingo.model.TWord">
    insert into t_word (word_id, table_id, word,
      `definition`, phonetic, phrase,
      definition_image, phrase_image, phrase_explain
      )
    values (#{wordId,jdbcType=BIGINT}, #{tableId,jdbcType=BIGINT}, #{word,jdbcType=VARCHAR},
      #{definition,jdbcType=VARCHAR}, #{phonetic,jdbcType=VARCHAR}, #{phrase,jdbcType=VARCHAR},
      #{definitionImage,jdbcType=VARCHAR}, #{phraseImage,jdbcType=VARCHAR}, #{phraseExplain,jdbcType=VARCHAR}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.example.lingo.model.TWord">
    update t_word
    set table_id = #{tableId,jdbcType=BIGINT},
      word = #{word,jdbcType=VARCHAR},
      `definition` = #{definition,jdbcType=VARCHAR},
      phonetic = #{phonetic,jdbcType=VARCHAR},
      phrase = #{phrase,jdbcType=VARCHAR},
      definition_image = #{definitionImage,jdbcType=VARCHAR},
      phrase_image = #{phraseImage,jdbcType=VARCHAR},
      phrase_explain = #{phraseExplain,jdbcType=VARCHAR}
    where word_id = #{wordId,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select word_id, table_id, word, `definition`, phonetic, phrase, definition_image,
    phrase_image, phrase_explain
    from t_word
    where word_id = #{wordId,jdbcType=BIGINT}
  </select>
  <select id="selectTenByPrimaryId" resultMap="BaseResultMap">
    select word_id, table_id, word, `definition`, phonetic, phrase, definition_image,
           phrase_image, phrase_explain
    from t_word
    where table_id = #{tableId,jdbcType=BIGINT}
        and word_id >= #{wordId,jdbcType=BIGINT}
    limit 10;
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select word_id, table_id, word, `definition`, phonetic, phrase, definition_image,
    phrase_image, phrase_explain
    from t_word
  </select>

</mapper>